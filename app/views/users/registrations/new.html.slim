- if params[:identity_token]
  = render 'identities/register'
- else
  - errors = Presenters::Error.new(errors: resource.errors) if resource&.errors&.any?
  - as = params[:as]
  - incipit = user_presenter.subscription_incipit(as: as)

  main#content[role="main"
              data-controller="signup"
              data-signup-channel-value="#{@resource_channel}"]

    .fr-container.fr-container--fluid
      .fr-grid-row.fr-grid-row-gutters.fr-grid-row--center
        .fr-col-12.fr-col-md-10.fr-col-lg-8
          .fr-container.fr-px-md-0
            .fr-grid-row.fr-grid-row-gutters.fr-grid-row--left
              = render 'layouts/breadcrumb', links: [ ['', incipit[:title]]]
          .fr-container.fr-background-alt--grey.fr-px-md-0.fr-py-10v.fr-py-md-14v
            .fr-grid-row.fr-grid-row-gutters.fr-grid-row--left.fr-mx-3w.fr-px-xs-2v.fr-px-sm-10v.fr-px-md-27v
              .text-left
                h1#subcription-title.fr-h4
                  = incipit[:title]
                p.fr-mt-6v
                  = incipit[:subtitle]
                p.fr-my-w.text-muted.fr-mt-6v
                  small
                    | Sauf mention contraire, tous les champs sont obligatoires.
                p
                  = render "layouts/form_errors", resource: resource, resource_name: :user
            fieldset#subscription-form.fr-mx-2w.fr-px-xs-2v.fr-px-sm-10v.fr-px-md-27v[aria-labelledby="subscription-title"]
              legend
              = form_with(model: resource,
                          scope: resource_name,
                          data: { turbo: false },
                          local: true,
                          url: registration_path(resource_name, as: resource.type.demodulize),
                          id: "new_user") do |f|
                - if user_presenter.show_when_subscribe?(as: as, field: :school)
                  .fr-fieldset__element
                    .fr-input-group.fr-mb-2v
                      label.fr-label for="user_school_city"
                        | Ville ou collège
                      = react_component("SearchSchool",
                                        props: { classes: "col-12",
                                                  label: 'Nom (ou ville) de mon établissement REP ou REP+',
                                                  required: true,
                                                  resourceName: :user,
                                                  selectClassRoom: can?(:choose_class_room, resource),
                                                  existingSchool: resource&.school&.as_json,
                                                  existingClassRoom: resource.try(:class_room).try(:as_json),
                                      })
                .fr-mt-1w
                  = render partial: "users/registrations/input_field",
                          locals: { f: f,
                                    field_label: "Prénom",
                                    field: :first_name,
                                    resource: resource,
                                    resource_name: resource_name,
                                    value: resource&.first_name || params[:first_name],
                                    option: { required: true },
                                    errors: errors }
                = render partial: "users/registrations/input_field",
                         locals: { f: f,
                                   field_label: "Nom",
                                   field: :last_name,
                                   value: resource&.last_name || params[:last_name],
                                   resource: resource,
                                   resource_name: resource_name,
                                   option: { required: true },
                                   errors: errors }
                - if user_presenter.show_when_subscribe?(as: as, field: :role)
                  .fr-fieldset__element
                    - error_tag  = errors.field_error_tag(resource_name: resource_name, resource: resource, field: :role) if errors.present?
                    div class="fr-input-group fr-mb-2v #{error_tag.present? ? 'fr-input-group--error' : ''}"
                      label.fr-label for="user_role" class="#{error_tag.present? ? 'fr-label--error' : ''}"
                        |Fonction
                      = f.select :role,
                          options_from_collection_for_select(user_roles_to_select, :value, :text, resource.role),
                          { prompt: "-- Veuillez choisir une fonction --" },
                          { class: "fr-select",
                                    required: true,
                                    data: { action: "change->signup#refreshEmailFieldLabel", :'signup-target' => "roleInput" } }
                      = error_tag
                - if user_presenter.show_when_subscribe?(as: as, field: :employer_role)
                  = render partial: "users/registrations/input_field",
                          locals: { f: f,
                                    field_label: "Fonction au sein de l'entreprise",
                                    field: :employer_role,
                                    resource: resource,
                                    resource_name: resource_name,
                                    option: {required: true, maxlength: 150},
                                    errors: errors }

                .fr-fieldset__element
                  - error_tag = errors.field_error_tag(resource_name: resource_name, resource: resource, field: :email) if errors.present?
                  div class="fr-input-group #{error_tag.present? ? 'fr-input-group--error' : ''}"
                    label.fr-label [for="user_email" data-signup-target="emailLabel"]
                      |Adresse électronique
                    p.fr-message.fr-mt-n2v[data-signup-target="emailExplanation"]
                      |Format attendu : nom@domaine.fr
                    = f.email_field :email,
                          class: "fr-input",
                          value: resource.email.blank? ? params[:email] : resource.email,
                          placeholder: "ex: nom@exemple.fr",
                          autofocus: params[:email].blank? ,
                          :'aria-describedby' => "user_email",
                          type: "email",
                          autocomplete: "on",
                          data: {action: 'change->signup#onBlurEmailInput', :"signup-target" => 'emailInput'}
                    p.fr-message.fr-message--error.d-none[data-signup-target="emailHint"]
                - # <% following avoids javascript errors
                span[data-signup-target="emailBloc"]
                span[data-signup-target="emailRadioButton"]
                span[data-signup-target="phoneInput"]
                span[data-signup-target="phoneBloc"]

                .fr-fieldset__element
                  - error_tag = errors.field_error_tag(resource_name: resource_name, resource: resource, field: :password) if errors.present?
                  div id="password_group" class="fr-password fr-my-2v #{error_tag.present? ? 'fr-input-group--error' :''}" data-signup-target="passwordGroup"
                    label id="password-group" class="fr-label #{error_tag.present? ? 'fr-label--error' : ''}" for="user_password"
                      |Créer un mot de passe
                    .fr-input-wrap
                      = f.password_field :password,
                                         :'aria-describedby' => "user_password-messages",
                                         autocomplete: "new-password",
                                         class: "fr-password__input fr-input fr-password__input fr-input #{error_tag.present? ? 'fr-input--error' : ''}",
                                         required: true,
                                         data: { action: "change->signup#checkPassword", :"signup-target" => "passwordInput" }
                      #password-input-messages.fr-messages-group aria-live="assertive"
                        p#password-input-message-info.fr-message.fr-message--info
                          |6 caractères minimum
                      = errors.field_error_tag(resource_name: resource_name, resource: resource, field: :password) if errors.present?
                    #user_password-messages.fr-messages-group[aria-live="assertive"]

                    .fr-password__checkbox.fr-checkbox-group.fr-checkbox-group--sm
                      input[aria-label="Afficher le mot de passe"
                            id="user_password-show"
                            type="checkbox"
                            aria-describedby="user_password-show-messages"]
                      label.fr-password__checkbox.fr-label[for="user_password-show"]
                        |  Afficher
                    #user_password-show-messages.fr-messages-group[aria-live="assertive"]
                      p[data-signup-target="passwordHint"]


                - if can?(:choose_operator, :sign_up)
                  .fr-fieldset__element
                    - error_tag  = errors.field_error_tag(resource_name: resource_name, resource: resource, field: :operator_id) if errors.present?
                    div class="fr-input-group fr-my-2v #{error_tag.present? ? 'fr-input-group--error' : ''}"
                      label#operator-select-label.fr-label for="user_operator" class="#{error_tag.present? ? 'fr-label--error' : ''}"
                        |Opérateur
                      = f.select :operator_id,
                          options_from_collection_for_select(Operator.all, :id, :name, resource.operator),
                          { prompt: operator_options_for_default },
                          class: "fr-select",
                          :'aria-labelledby' => 'operator-select-label'
                      = error_tag
                .fr-fieldset__element.fr-mt-3w
                  - error_tag  = errors.field_error_tag(resource_name: resource_name, resource: resource, field: :accept_terms) if errors.present?
                  div class="fr-checkbox-group fr-my-2v #{error_tag.present? ? 'fr-input-group--error' : ''}"
                    = f.check_box :accept_terms
                    label.fr-label for="user_accept_terms"
                      -link = link_to "conditions d'utilisation",
                                      conditions_d_utilisation_path,
                                      target: "_blank",
                                      title: "conditions d'utilisation (nouvelle fenêtre)",
                                      rel: "external noopener noreferrer",
                                      class: "font-weight-normal"
                      = "J'accepte les&nbsp;#{link} .".html_safe
                      p
                        = link_to "Lire la Politique de confidentialité",
                                  politique_de_confidentialite_path,
                                  title: "Lire la Politique de confidentialité (nouvelle fenètre)",
                                  target: "_blank",
                                  rel: "external noopener noreferrer",
                                  class: "font-weight-normal"
                        span.font-weight-normal
                          = " pour connaître les modalités d'utilisations de mes informations récoltées."
                    = error_tag
                .fr-col-12
                  .actions.text-right
                    = f.submit "Valider", class: "fr-btn fr-mx-2w", id: "test-create-user"


