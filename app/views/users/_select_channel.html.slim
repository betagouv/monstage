- error_status = error_status || false
fieldset.select-channel.fr-fieldset.fr-mt-n4w[aria-labelledby="channel-legend"]
  legend#channel-legend.fr-fieldset__legend.fr-text--regular
    - if block_given?
      = yield
  p.fr-fieldset__details.fr-ml-1w
    = label
  .fr-fieldset__content.fr-fieldset--inline
    .fr-radio-group
      = form.radio_button :channel,
                          "email",
                          id: "select-channel-email",
                          "data-action" => "change->signup#checkEmail",
                          "data-signup-target" => "emailRadioButton",
                          checked: (cookies[:prefered_channel] == "email")  do
      label.fr-label for="select-channel-email"
        | Par email
    .fr-radio-group.text-right
      = form.radio_button :channel,
                          "phone",
                          id: "select-channel-phone",
                          "data-action" => "change->signup#checkPhone",
                          "data-signup-target" => "phoneRadioButton",
                          checked: (cookies[:prefered_channel] == "phone")
      label.fr-label for="select-channel-phone"
        | Par téléphone

  - hint        = 'Format attendu : nom@domaine.fr'
  - placeholder = 'ex: nom@exemple.fr'
  - label       = resource.school_manager? ? "Adresse électronique académique " : "Adresse électronique "
  .fr-fieldset__element.d-none.registration[data-signup-target="emailBloc"]
    - if error_status
      / -------- error
      p.fr-error-text id="text-input-error-desc-error-email"
        ="#{label} ou mot de passe incorects"
      .fr-input-group.fr-input-group--error
        = form.label :email,
                     class: 'fr-label',
                     for: "user_email"
          = label
        - unless hint.blank?
          .text-muted = hint
        = form.text_field :email,
                      class: "fr-input fr-input--error",
                      value: resource.email.blank? ? params[:email] : resource.email,
                      :'aria-describedby' => "text-input-error-desc-error",
                      placeholder: placeholder,
                      data: {action: 'change->signup#onBlurEmailInput', :"signup-target" => 'emailInput'}
        small.d-none[data-signup-target="emailHint"]

    - else
      / -------- no error
      .fr-input-group
        = form.label :email,
                     class: "fr-label",
                     for: "user_email"
          span[data-signup-target="label"] = label
        small.form-text.text-muted.fr-mb-2w
          | Format attendu : nom@domaine.fr
        small#email-explanation.form-text.text-muted[data-signup-target="emailExplanation"]
        = form.email_field :email,
                           id: "user_email",
                           class: "fr-input #{ hint.blank? ? '' : 'fr-mt-n2v'}",
                           value: resource.email.blank? ? params[:email] : resource.email,
                           autofocus: params[:email].blank? ? true : false,
                           placeholder: placeholder,
                           data: {action: 'change->signup#onBlurEmailInput', :"signup-target" => 'emailInput'}

        small.d-none[data-signup-target="emailHint"]

  .fr-fieldset__element.phone.d-none[data-signup-target="phoneBloc"]
    = form.label :phone,
                  class: "fr-label",
                 'data-action' => "click->signup#focusPhone",
                 for: 'phone-input' do
      span
        | Numéro de téléphone
      br
      small.form-text.text-muted
        | Ce numéro sera utilisé uniquement pour communiquer avec vous. Format attendu : +33 puis 06 11 22 33 44, par exemple.
    = react_component("CountryPhoneSelect",
                      props: { name: 'user[phone]',
                               value: resource.phone || params[:phone],
                               withTarget: true })

