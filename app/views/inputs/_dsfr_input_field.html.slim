- hint ||= ''
- placeholder ||= ''
- required ||= false
- id = "#{object.class.name.downcase}_#{field}"
- field_type ||= :text_field
- pattern ||= ''
- title ||= ''
- value = value || (object.send(field) if object)
- if object&.errors.blank?
  .fr-input-group
    = f.label field,
              class: "fr-label",
              for: id
      = label
    - unless hint.blank?
      .text-muted.fr-mb-4v = hint
    = f.send(field_type, field, class: "fr-input #{ hint.blank? ? "" : 'fr-mt-n2v'}",
                          :'aria-describedby' => "text-input-valid-desc-valid",
                          id: id,
                          value: value,
                          placeholder: placeholder,
                          required: required,
                          **(pattern.present? ? { pattern: pattern } : {}),
                          title: title)
- elsif object.errors[field].present?
  .fr-input-group.fr-input-group--error
    = f.label field,
              class: 'fr-label',
              for: id
      = label
    - unless hint.blank?
      .text-muted = hint
    = f.send(field_type, field,
                   class: "fr-input fr-input--error",
                   :'aria-describedby' => "text-input-error-desc-error",
                   id: id,
                   value: value,
                   required: required,
                   **(pattern.present? ? { pattern: pattern } : {}),
                   title: title)
    p.fr-error-text id="text-input-error-desc-error-#{field}"
      - field_name = t("activerecord.attributes.#{object.class.name.underscore}.#{field}")
      = "#{field_name} : #{object.errors[field].map(&:downcase).join(', ').html_safe}"
- else
  .fr-input-group.fr-input-group--valid
    = f.label field,
              class:"fr-label",
              for: id
      = label
    - unless hint.blank?
      .text-muted = hint
    = f.send(field_type, field,
                   class: 'fr-input fr-input--valid',
                   :'aria-describedby' => "text-input-valid-desc-valid",
                   id: id,
                   value: value,
                   required: required,
                   **(pattern.present? ? { pattern: pattern } : {}),
                   title: title)
