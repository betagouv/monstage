import { Controller } from "stimulus"
import places from 'places.js';
import {showElement, hideElement } from '../utils/dom.js'

export default class extends Controller {
  static targets = [ "autocompleteFormGroup",
                     "autocompleteInput",
                     "longitudeInput",
                     "latitudeInput",
                     "streetInput",
                     "cityInput",
                     "zipcodeInput" ]

  onAlgoliaSearchResultSelected = (selection) => {
    const suggestion = selection.suggestion;

    this.streetInputTarget.value = suggestion.name;
    this.cityInputTarget.value = suggestion.city;
    this.zipcodeInputTarget.value = suggestion.postcode;
    this.longitudeInputTarget.value = suggestion.latlng.lng;
    this.latitudeInputTarget.value = suggestion.latlng.lat;
  }


  connect() {
    // initialize algolia api
    this.placesAutocomplete = places({
      container: this.autocompleteInputTarget,
      appId: '<%= Credentials.enc(:algolia, :app_id, prefix_env: false) %>',
      apiKey: '<%= Credentials.enc(:algolia, :api_key, prefix_env: false) %>'
    });

    // configure algolia api
    this.placesAutocomplete.configure({
      language: 'fr',
      countries: ['fr'],
      type: 'address'
    })

    // listen on algolia search result selection
    this.placesAutocomplete.on("change", this.onAlgoliaSearchResultSelected)

    // listen on clear address
    /* fix: does not works
    this.placesAutocomplete.on("clean", () =>{
      $(this.employerStreetTarget).val(null)
      $(this.employerCityTarget).val(null)
      $(this.employerZipcodeTarget).val(null)
      $(this.longitudeInputTarget).val(null)
      $(this.latitudeInputTarget).val(null)
    })
    */

    // when everything is ok ; show autocompleteTarget and makes default input readonly
    showElement(this.autocompleteFormGroupTarget);
    this.streetInputTarget.setAttribute("readonly", true)
    this.cityInputTarget.setAttribute("readonly", true)
    this.zipcodeInputTarget.setAttribute("readonly", true)
  }

  disconnect() {
    this.placesAutocomplete.destroy()
  }
}
