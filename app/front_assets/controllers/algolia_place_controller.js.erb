import { Controller } from "stimulus"
import places from 'places.js';

export default class extends Controller {
  static targets = [ "autocompleteFormGroup",
                     "autocompleteInput",
                     "longitudeInput",
                     "latitudeInput",
                     "streetInput",
                     "cityInput",
                     "zipcodeInput" ]

  onAlgoliaSearchResultSelected = (selection) => {
    const suggestion = selection.suggestion;

    $(this.streetInputTarget).val(suggestion.name);
    $(this.cityInputTarget).val(suggestion.city);
    $(this.zipcodeInputTarget).val(suggestion.postcode);
    $(this.longitudeInputTarget).val(suggestion.latlng.lng);
    $(this.latitudeInputTarget).val(suggestion.latlng.lat);
  }


  connect() {
    // initialize algolia api
    this.placesAutocomplete = places({
      container: this.autocompleteInputTarget,
      appId: '<%= Credentials.enc(:algolia, :app_id, prefix_env: false) %>',
      apiKey: '<%= Credentials.enc(:algolia, :api_key, prefix_env: false) %>'
    });

    // configure algolia api
    this.placesAutocomplete.configure({
      language: 'fr',
      countries: ['fr'],
      type: 'address'
    })

    // listen on algolia search result selection
    this.placesAutocomplete.on("change", this.onAlgoliaSearchResultSelected)

    // listen on clear address
    /* fix: does not works
    this.placesAutocomplete.on("clean", () =>{
      $(this.employerStreetTarget).val(null)
      $(this.employerCityTarget).val(null)
      $(this.employerZipcodeTarget).val(null)
      $(this.longitudeInputTarget).val(null)
      $(this.latitudeInputTarget).val(null)
    })
    */

    // when everything is ok ; show autocompleteTarget and makes default input readonly
    $(this.autocompleteFormGroupTarget).removeClass('d-none')
    $(this.streetInputTarget).prop("readonly", true)
    $(this.cityInputTarget).prop("readonly", true)
    $(this.zipcodeInputTarget).prop("readonly", true)
  }

  disconnect() {
    this.placesAutocomplete.destroy()
  }
}
